@page "/preview/{type}"
@inject IJSRuntime Runtime

<NavMenu />
<div class="container mt-1 pt-2">

    <!--Section: Content-->
    <section class="white-text">

        <!-- Grid row -->
        <div class="row" style="position:absolute;left:4%;right:4%;width:94%">

            <div class="col-12">
                <div class="card z-depth-2">
                    <div class="card-body p-0">
                        <div class="row">
                            <div class="col-lg-9 blue-gradient rounded-left py-5 px-md-5">
                                <h4 class="font-weight-bold ml-3 mb-4 pb-2">3D Preview</h4>
                                <div id="p3dboard">

                                </div>
                            </div>
                            <div class="col-lg-3 red accent-3 rounded-right py-5 px-md-5">
                                <h4 class="font-weight-bold ml-3 mb-4 pb-2">Tweaks</h4>

                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <!-- Grid row -->

    </section>
    <!--Section: Content-->


</div>
<style>
    body {
        margin: 0;
        padding: 0;
        background: rgb(195,234,237);
        background: linear-gradient(90deg, rgba(195,234,237,1) 0%, rgba(126,126,191,1) 35%, rgba(87,116,120,1) 100%);
    }

    #p3dboard {
        background-color: black;
        left: 50px;
        right: 50px;
        top: 112px;
        bottom: 5%;
        width: 100%;
        height: 600px;
    }
</style>


@code
{
    [Parameter]
    public string type { get; set; }

    double[] pointX;
    double[] pointY;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadVertices();
    }

    private void LoadVertices()
    {
        switch (int.Parse(type))
        {
            case 0:
                LoadFromDoodle();
                break;
        }
    }

    private void LoadFromDoodle()
    {
        pointX = DoodleVertices.PointX;
        pointY = DoodleVertices.PointY;
        StateHasChanged();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
            Init();
    }
    private async void Init()
    {
        await Runtime.InvokeVoidAsync("CreateCanvas3D",int.Parse(type));
    }

}
