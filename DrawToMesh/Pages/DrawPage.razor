@page "/draw"
@inject IJSRuntime Runtime
<NavMenu />

<div class="btn-toolbar flex-center" style="position:relative;top:-5px" role="toolbar" aria-label="Toolbar with button groups">
    <div class="btn-group mr-0" role="group" aria-label="First group">
        <!--button type="button" class="btn light-blue waves-effect"><i class="fas fa-pencil-alt white-text fa-2x" aria-hidden="true"></i></button-->
        <button type="button" class="btn light-blue waves-effect" @onclick="Undo"><i class="fas fa-undo-alt white-text fa-2x"></i></button>
        <button type="button" class="btn light-blue waves-effect" @onclick="Redo"><i class="fas fa-redo-alt white-text fa-2x"></i></button>
        <button type="button" class="btn blue-gradient waves-effect"><i class="fas fa-box fa-2x"></i></button>
    </div>
</div>

<div id="drawingBoard" class="shadow">

</div>


<style>
    body {
        margin: 0;
        padding: 0;
        overflow: hidden;
        background: rgb(195,234,237);
        background: linear-gradient(90deg, rgba(195,234,237,1) 0%, rgba(126,126,191,1) 35%, rgba(87,116,120,1) 100%);
    }
    #drawingBoard {
        background-color: white;
        left: 5%;
        top: 115px;
        bottom: 5%;
        right: 5%;
        position: absolute;
        width: 90%;
        z-index: -1;
        height: 82%;
    }



</style>

@code
{

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
            Init();
    }
    private async void Init()
    {
        await Runtime.InvokeVoidAsync("CreateCanvas");
    }
    private async void Undo()
    {
        await Runtime.InvokeVoidAsync("Undo");
    }
    private async void Redo()
    {
        await Runtime.InvokeVoidAsync("Redo");
    }
}