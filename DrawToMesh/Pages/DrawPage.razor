@page "/draw"
@inject IJSRuntime Runtime
<NavMenu />

<div class="btn-toolbar flex-center" style="position:relative;top:-5px" role="toolbar" aria-label="Toolbar with button groups">
    <div class="btn-group mr-0" role="group" aria-label="First group">
        <!--button type="button" class="btn light-blue waves-effect"><i class="fas fa-pencil-alt white-text fa-2x" aria-hidden="true"></i></button-->
        <button type="button" class="btn light-blue waves-effect" @onclick="Undo"><i class="fas fa-undo-alt white-text fa-2x"></i></button>
        <button type="button" class="btn light-blue waves-effect" @onclick="Redo"><i class="fas fa-redo-alt white-text fa-2x"></i></button>
        <button type="button" class="btn light-blue waves-effect" data-toggle="modal" data-target="#basicExampleModal" for="file-upload"><i class="fas fa-image white-text fa-2x"></i></button>
        <button type="button" class="btn light-blue waves-effect"><i class="fas fa-cog fa-2x white-text"></i></button>
        <button type="button" class="btn peach-gradient waves-effect" @onclick="Visualize3D"><i class="fas fa-dice-d20 fa-2x"></i></button>
    </div>
</div>
<input id="file-upload" style="visibility:hidden" type="file" />

<div id="drawingBoard" class="shadow">

</div>
@if (!ErrorVisible)
{
    <div class="alert alert-danger" role="alert" style="position:absolute;bottom:-13px;width:100%">
        Path traced should be closed , ie. first and last point should be at same location and there must be more than 2 Points.
    </div>
}

<!-- Modal -->
<div class="modal fade" id="basicExampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Load Reference Image</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Default switch -->
                <div class="custom-control custom-switch">
                    <input type="checkbox" class="custom-control-input" id="customSwitches">
                    <label class="custom-control-label" for="customSwitches">Fill Image on Canvas</label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="UploadReference" data-dismiss="modal" aria-label="Close">Load New</button>
            </div>
        </div>
    </div>
</div>


<style>
    body {
        margin: 0;
        padding: 0;
        overflow: hidden;
        background: rgb(195,234,237);
        background: linear-gradient(90deg, rgba(195,234,237,1) 0%, rgba(126,126,191,1) 35%, rgba(87,116,120,1) 100%);
    }

    #drawingBoard {
        background-color: white;
        left: 5%;
        top: 112px;
        bottom: 5%;
        right: 5%;
        position: absolute;
        width: 90%;
        z-index: -1;
        height: 82%;
    }
</style>

@code
{
    private bool ErrorVisible = true;
    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
            Init();
    }
    private async void Init()
    {
        await Runtime.InvokeVoidAsync("CreateCanvas");
    }
    private async void Undo()
    {
        await Runtime.InvokeVoidAsync("Undo");
    }
    private async void Redo()
    {
        await Runtime.InvokeVoidAsync("Redo");
    }
    private async void UploadReference()
    {
        await Runtime.InvokeVoidAsync("OpenFileDialog");
    }
    private async void Visualize3D()
    {
        ErrorVisible = await Runtime.InvokeAsync<bool>("Check1stAndLastPoint");
        StateHasChanged();
    }

}